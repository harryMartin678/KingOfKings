<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="KingOfKings">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="../../../../../../../../../Program Files/eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar"/>
        <pathelement location="../../../../../../../../../Program Files/eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="jogl-2.0.userclasspath">
        <pathelement location="../../../../../../../../../KingOfKings/jogl-2.0-b23-20110303-windows-amd64/jar/gluegen-rt.jar"/>
        <pathelement location="../../../../../../../../../KingOfKings/jogl-2.0-b23-20110303-windows-amd64/jar/jogl.all.jar"/>
        <pathelement location="../../../../../../../../../KingOfKings/jogl-2.0-b23-20110303-windows-amd64/jar/nativewindow.all.jar"/>
        <pathelement location="../../../../../../../../../KingOfKings/jogl-2.0-b23-20110303-windows-amd64/jar/newt.all.jar"/>
    </path>
    <path id="KingOfKings.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <path refid="jogl-2.0.userclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="GameGraphics/GameScreen.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <exclude name="GameGraphics/GameScreen.java"/>
            <classpath refid="KingOfKings.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="Building">
        <java classname="Buildings.Building" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="BuildingTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="Buildings.BuildingTests" todir="${junit.output.dir}"/>
            <classpath refid="KingOfKings.classpath"/>
        </junit>
    </target>
    <target name="Client (2)">
        <java classname="GameClient.Client" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="ClientMessages">
        <java classname="GameClient.ClientMessages" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="CollisionMap">
        <java classname="Map.CollisionMap" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="Communication">
        <java classname="GameCommunicationServer.Communication" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="FormationMovement">
        <java classname="IntermediateAI.FormationMovement" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="GameEngine">
        <java classname="GameServer.GameEngine" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="Graphics">
        <java classname="GameGraphics.Graphics" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="LoadMap (1)">
        <java classname="Map.LoadMap" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="LoadMesh">
        <java classname="GameGraphics.LoadMesh" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="MainMenu">
        <java classname="MainMenu.MainMenu" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="MapGenerator">
        <java classname="Map.MapGenerator" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="MapPathFinder">
        <java classname="IntermediateAI.MapPathFinder" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="MapRouteFinder">
        <java classname="IntermediateAI.MapRouteFinder" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="Model">
        <java classname="GameGraphics.Model" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="ParseText">
        <java classname="GameClient.ParseText" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="Pathfinder">
        <java classname="IntermediateAI.Pathfinder" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="PathFinderTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="IntermediateAI.PathFinderTests" todir="${junit.output.dir}"/>
            <classpath refid="KingOfKings.classpath"/>
        </junit>
    </target>
    <target name="Player (2)">
        <java classname="Player.Player" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="Server (2)">
        <java classname="GameServer.Server" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="ServerManager">
        <java classname="GameServer.ServerManager" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="ServerMessages">
        <java classname="GameServer.ServerMessages" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="TestMethods">
        <java classname="GameServer.TestMethods" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="TestUnits">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="Units.TestUnits" todir="${junit.output.dir}"/>
            <classpath refid="KingOfKings.classpath"/>
        </junit>
    </target>
    <target name="TestUnits.testStats">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="Units.TestUnits" todir="${junit.output.dir}"/>
            <classpath refid="KingOfKings.classpath"/>
        </junit>
    </target>
    <target name="TowerBattle">
        <java classname="Buildings.TowerBattle" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="Unit">
        <java classname="Units.Unit" failonerror="true" fork="yes">
            <classpath refid="KingOfKings.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
